{"version":3,"file":"main.js","mappings":"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","sources":["webpack://test-assignment/./src/assets/constants.js","webpack://test-assignment/./src/pages/index.js"],"sourcesContent":["export const cardData = [\n  {\n    number: 1,\n    description: 'Строительство железнодорожной магистрали Москва-Васюки'\n  },\n  {\n    number: 2,\n    description: 'Открытие фешенебельной гостиницы «Проходная пешка» и других небоскрёбов'\n  },\n  {\n    number: 3,\n    description: 'Поднятие сельского хозяйства в радиусе на тысячу километров: производство овощей, фруктов, икры, шоколадных конфет' },\n  {\n    number: 4,\n    description: 'Строительство дворца для турнира'\n  },\n  {\n    number: 5,\n    description: 'Размещение гаражей для гостевого автотранспорта'\n  },\n  {\n    number: 6,\n    description: 'Постройка сверхмощной радиостанции для передачи всему миру сенсационных результатов'\n  },\n  {\n    number: 7,\n    description: 'Создание аэропорта «Большие Васюки» с регулярным отправлением почтовых самолётов и дирижаблей во все концы света, включая Лос-Анжелос и Мельбурн'\n  }\n];\n\nexport const membersData = [\n  {\n    id: 1,\n    name: 'Хозе-Рауль Капабланка',\n    title: 'Чемпион мира по шахматам'\n  },\n  {\n    id: 2,\n    name: 'Эммануил Ласкер',\n    title: 'Чемпион мира по шахматам'\n  },\n  {\n    id: 3,\n    name: 'Александр Алехин',\n    title: 'Чемпион мира по шахматам'\n  },\n  {\n    id: 4,\n    name: 'Арон Нимцович',\n    title: 'Чемпион мира по шахматам'\n  },\n  {\n    id: 5,\n    name: 'Рихард Рети',\n    title: 'Чемпион мира по шахматам'\n  },\n  {\n    id: 6,\n    name: 'Остап Бендер',\n    title: 'Гроссмейстер'\n  },\n]\n","import './index.css';\nimport { cardData } from '../assets/constants';\nimport { membersData } from '../assets/constants';\n\n// Отрисовка карточек в секции stages для десктопа\ndocument.addEventListener('DOMContentLoaded', function() {\n  const stagesList = document.getElementById('stagesList');\n  const cardTemplate = document.getElementById('cardTemplate').content;\n\n  cardData.forEach(card => {\n    const cardClone = document.importNode(cardTemplate, true);\n    const numberElement = cardClone.querySelector('.stages__card-number');\n    const descriptionElement = cardClone.querySelector('.stages__card-description');\n\n    numberElement.textContent = card.number;\n    descriptionElement.textContent = card.description;\n    stagesList.appendChild(cardClone);\n  });\n\n  const cardsArr = document.querySelectorAll('.stages__card');\n  cardsArr.forEach((el, index) => {\n    el.classList.add(`stages__card${index + 1}`);\n  });\n});\n\n// Отрисовка карточек в секции stages для мобильной версии, логика работы пагинатора\ndocument.addEventListener('DOMContentLoaded', function() {\n  const cards = document.querySelectorAll('.stages__card-mobile');\n  const prevButton = document.querySelector('.pagination__button-prev');\n  const nextButton = document.querySelector('.pagination__button-next');\n  const pointsContainer = document.querySelector('.pagination__points');\n\n  let currentIndex = 0;\n\n  function createPaginationPoints() {\n    cards.forEach((_, index) => {\n      const point = document.createElement('div');\n      point.classList.add('pagination__point');\n      if (index === currentIndex) {\n        point.classList.add('active');\n      }\n      pointsContainer.appendChild(point);\n    });\n  };\n\n  function updateCards() {\n    cards.forEach((card, index) => {\n      card.classList.remove('active');\n    });\n    cards[currentIndex].classList.add('active');\n\n    const points = document.querySelectorAll('.pagination__point');\n    points.forEach((point, index) => {\n      point.classList.remove('active');\n      if (index === currentIndex) {\n        point.classList.add('active');\n      }\n    });\n  };\n\n  prevButton.addEventListener('click', () => {\n    if (currentIndex > 0) {\n      currentIndex--;\n    } else {\n      currentIndex = cards.length - 1;\n    }\n    updateCards();\n  });\n\n  nextButton.addEventListener('click', () => {\n    if (currentIndex < cards.length - 1) {\n      currentIndex++;\n    } else {\n      currentIndex = 0;\n    }\n    updateCards();\n  });\n\n  createPaginationPoints();\n  updateCards();\n});\n\n// Отрисовка карточек участников турнира и логика работы пагинатора\ndocument.addEventListener('DOMContentLoaded', function() {\n  const membersContainer = document.getElementById('membersContainer');\n  const cardTemplate = document.getElementById('memberCard').content;\n  const prevButton = document.querySelector('.members__pagination-button_prev');\n  const nextButton = document.querySelector('.members__pagination-button_next');\n  const currentCounter = document.querySelector('.members__counter-current');\n  const totalCounter = document.querySelector('.members__counter-total');\n\n  membersData.forEach(card => {\n    const cardClone = document.importNode(cardTemplate, true);\n    const nameElement = cardClone.querySelector('.members__member-name');\n    const titleElement = cardClone.querySelector('.members__member-title');\n\n    nameElement.textContent = card.name;\n    titleElement.textContent = card.title;\n    membersContainer.appendChild(cardClone);\n  });\n\n  const cards = document.querySelectorAll('.members__card');\n  const totalCards = cards.length;\n\n  let currentIndex = 0;\n\n  function getCardsPerPage() {\n    if (window.innerWidth >= 1366) {\n      return 3;\n    } else if (window.innerWidth >= 952) {\n      return 2;\n    } else {\n      return 1;\n    };\n  };\n\n  function updateCards() {\n    const cardsPerPage = getCardsPerPage();\n    cards.forEach(card => card.style.display = 'none');\n\n    for (let i = 0; i < cardsPerPage; i++) {\n      const cardToShow = (currentIndex + i) % totalCards;\n      cards[cardToShow].style.display = 'flex';\n    }\n\n    const firstCardDisplayed = currentIndex + 1;\n    currentCounter.textContent = firstCardDisplayed;\n    totalCounter.textContent = totalCards;\n  };\n\n  prevButton.addEventListener('click', () => {\n    currentIndex = (currentIndex - 1 + totalCards) % totalCards;\n    updateCards();\n  });\n\n  nextButton.addEventListener('click', () => {\n    currentIndex = (currentIndex + 1) % totalCards;\n    updateCards();\n  });\n\n  setInterval(() => {\n    currentIndex = (currentIndex + 1) % totalCards;\n    updateCards();\n  }, 4000);\n\n  updateCards();\n});\n\n// Добавление бегущей строки в подвале\ndocument.addEventListener('DOMContentLoaded', function() {\n  const runningLine = document.querySelector('.running-line');\n  const footerText = document.querySelector('.footer__text');\n  const footer = document.querySelector('.footer');\n\n  if (runningLine && footerText && footer) {\n    const clonedRunningLine = runningLine.cloneNode(true);\n    footer.insertBefore(clonedRunningLine, footerText);\n    clonedRunningLine.classList.add('footer-line');\n  } else {\n    console.error('One of the elements was not found')\n  }\n});\n\n// Изменение расположения элементов \"Плата за игру:\" и \"50 коп.\" для мобильных устройств\ndocument.addEventListener('DOMContentLoaded', function () {\n  let paymentLabelOriginal = null;\n  let paymentValueOriginal = null;\n  let combinedContainer = null;\n\n  function adjustMobileLayout() {\n    const parent = document.getElementById('info');\n    const paymentLabel = document.querySelector('.info__table-text:nth-child(7)');\n    const paymentValue = document.querySelector('.info__table-text:nth-child(8)');\n\n    if (window.innerWidth <= 700) {\n      if (paymentLabel && paymentValue) {\n        if (!paymentLabelOriginal && !paymentValueOriginal) {\n          paymentLabelOriginal = paymentLabel;\n          paymentValueOriginal = paymentValue;\n        }\n\n        if (!document.querySelector('.info__combined-mobile')) {\n          combinedContainer = document.createElement('div');\n          combinedContainer.classList.add('info__combined-mobile');\n          combinedContainer.style.display = 'flex';\n          combinedContainer.style.padding = '16px 0';\n          combinedContainer.style.alignItems = 'center';\n          combinedContainer.style.borderBottom = '2px solid #D0D0D0';\n\n          paymentLabelOriginal.style.padding ='0';\n          paymentValueOriginal.style.padding ='0 0 0 12px';\n\n          const paymentLabelClone = paymentLabelOriginal.cloneNode(true);\n          const paymentValueClone = paymentValueOriginal.cloneNode(true);\n\n          combinedContainer.appendChild(paymentLabelClone);\n          combinedContainer.appendChild(paymentValueClone);\n\n          parent.insertBefore(combinedContainer, paymentLabelOriginal);\n\n          parent.removeChild(paymentLabelOriginal);\n          parent.removeChild(paymentValueOriginal);\n        }\n      }\n    } else {\n      if (document.querySelector('.info__combined-mobile')) {\n        parent.insertBefore(paymentLabelOriginal, combinedContainer);\n        parent.insertBefore(paymentValueOriginal, combinedContainer);\n\n        parent.removeChild(combinedContainer);\n\n        paymentLabelOriginal.style.padding = '15px 15px 15px 0';\n        paymentValueOriginal.style.padding = '15px 0 15px 15px';\n\n        combinedContainer = null;\n      }\n    }\n  }\n\n  adjustMobileLayout();\n  window.addEventListener('resize', adjustMobileLayout);\n});\n"],"names":["cardData","number","description","membersData","id","name","title","document","addEventListener","stagesList","getElementById","cardTemplate","content","forEach","card","cardClone","importNode","numberElement","querySelector","descriptionElement","textContent","appendChild","querySelectorAll","el","index","classList","add","concat","cards","prevButton","nextButton","pointsContainer","currentIndex","updateCards","remove","point","length","_","createElement","membersContainer","currentCounter","totalCounter","nameElement","titleElement","totalCards","cardsPerPage","window","innerWidth","style","display","i","firstCardDisplayed","setInterval","runningLine","footerText","footer","clonedRunningLine","cloneNode","insertBefore","console","error","paymentLabelOriginal","paymentValueOriginal","combinedContainer","adjustMobileLayout","parent","paymentLabel","paymentValue","padding","alignItems","borderBottom","paymentLabelClone","paymentValueClone","removeChild"],"sourceRoot":""}